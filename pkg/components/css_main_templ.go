// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.513
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func styleCSS() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style type=\"text/css\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var2 := `

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f6f8fa;
  color: #24292e;
}

header {
  background-color: #0366d6;
  color: #ffffff;
  padding: 10px;
}

header a {
  color: #ffffff;
  text-decoration: none;
}

header a:hover {
  text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
  color: #24292e;
}

h1 {
  font-size: 2em;
  border-bottom: 1px solid #e1e4e8;
  padding-bottom: 0.2em;
  margin-bottom: 0.5em;
}

h2 {
  font-size: 1.5em;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

h3 {
  font-size: 1.2em;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

h4 {
  font-size: 1.1em;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

h5 {
  font-size: 1em;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

h6 {
  font-size: 1em;
  font-weight: normal;
  margin-top: 1em;
  margin-bottom: 0.5em;
}

hr {
  border: 0;
  height: 1px;
  background-color: #e1e4e8;
  margin: 1em 0;
}

ul, ol {
  margin-bottom: 20px;
  padding-left: 20px;
}

ul li,
ol li {
  margin-bottom: 8px;
}

ul ul,
ol ol {
  margin-top: 4px;
}

ul ul,
ul ol,
ol ul,
ol ol {
  margin-left: 20px;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

dl {
  margin-bottom: 20px;
}

dt {
  font-weight: bold;
}

dd {
  margin-bottom: 8px;
}

hr {
  border: 0;
  height: 1px;
  background-color: #e1e4e8;
  margin: 1em 0;
}

table {
  width: auto;
  border-collapse: collapse;
  margin-bottom: 20px;
}

th, td {
  border: 1px solid #d1d5da;
  padding: 8px;
  text-align: left;
}

th {
  background-color: #f6f8fa;
}

tr:nth-child(even) {
  background-color: #f6f8fa;
}

td a {
  color: #0366d6;
  text-decoration: none;
}

td a:hover {
  text-decoration: underline;
}

footer {
  background-color: #f6f8fa;
  color: #586069;
  padding: 16px;
  text-align: center;
  font-size: 14px;
  border-top: 1px solid #e1e4e8;
  margin-top: 20px;
}

footer a {
  color: #0366d6;
  text-decoration: none;
}

footer a:hover {
  text-decoration: underline;
}

.markdown-container {
  max-width: 800px;
  margin: 20px auto;
  padding: 20px;
  background-color: #ffffff;
  border: 1px solid #e1e4e8;
  border-radius: 6px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

`
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var2)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
